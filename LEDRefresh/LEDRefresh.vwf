/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000000000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Columnout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Columnout[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("Columnout[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Columnout";
}

SIGNAL("DataSel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DataSel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataSel";
}

SIGNAL("DataSel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataSel";
}

SIGNAL("DataSel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataSel";
}

SIGNAL("LEDEnable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Lineout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Lineout[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Lineout";
}

SIGNAL("Lineout[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Lineout";
}

SIGNAL("Lineout[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Lineout";
}

SIGNAL("Lineout[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Lineout";
}

SIGNAL("Lineout[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Lineout";
}

SIGNAL("Lineout[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Lineout";
}

SIGNAL("Lineout[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Lineout";
}

SIGNAL("Lineout[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Lineout";
}

SIGNAL("luma")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("luma[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "luma";
}

SIGNAL("luma[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "luma";
}

SIGNAL("luma[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "luma";
}

SIGNAL("luma[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "luma";
}

SIGNAL("luma[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "luma";
}

SIGNAL("luma[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "luma";
}

SIGNAL("luma[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "luma";
}

SIGNAL("luma[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "luma";
}

SIGNAL("PWMclock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Rollclock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Switchclock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("Columnout[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Columnout[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("DataSel[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4000000000.0;
			LEVEL 1 FOR 4000000000.0;
		}
		LEVEL 0 FOR 2000000000.0;
	}
}

TRANSITION_LIST("DataSel[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2000000000.0;
			LEVEL 1 FOR 2000000000.0;
		}
		LEVEL 0 FOR 2000000000.0;
	}
}

TRANSITION_LIST("DataSel[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 1000000000.0;
			LEVEL 1 FOR 1000000000.0;
		}
	}
}

TRANSITION_LIST("LEDEnable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000000000.0;
	}
}

TRANSITION_LIST("Lineout[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Lineout[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Lineout[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Lineout[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Lineout[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Lineout[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Lineout[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("Lineout[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 10000000000.0;
	}
}

TRANSITION_LIST("luma[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 78125;
			LEVEL 0 FOR 64000.0;
			LEVEL 1 FOR 64000.0;
		}
	}
}

TRANSITION_LIST("luma[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 156250;
			LEVEL 0 FOR 32000.0;
			LEVEL 1 FOR 32000.0;
		}
	}
}

TRANSITION_LIST("luma[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 312500;
			LEVEL 0 FOR 16000.0;
			LEVEL 1 FOR 16000.0;
		}
	}
}

TRANSITION_LIST("luma[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 625000;
			LEVEL 0 FOR 8000.0;
			LEVEL 1 FOR 8000.0;
		}
	}
}

TRANSITION_LIST("luma[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1250000;
			LEVEL 0 FOR 4000.0;
			LEVEL 1 FOR 4000.0;
		}
	}
}

TRANSITION_LIST("luma[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2500000;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
		}
	}
}

TRANSITION_LIST("luma[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5000000;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("luma[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10000000;
			LEVEL 0 FOR 500.0;
			LEVEL 1 FOR 500.0;
		}
	}
}

TRANSITION_LIST("PWMclock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10000000;
			LEVEL 0 FOR 500.0;
			LEVEL 1 FOR 500.0;
		}
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000000.0;
	}
}

TRANSITION_LIST("Rollclock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 80;
			LEVEL 0 FOR 62500000.0;
			LEVEL 1 FOR 62500000.0;
		}
	}
}

TRANSITION_LIST("Switchclock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 5000;
			LEVEL 0 FOR 1000000.0;
			LEVEL 1 FOR 1000000.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "Columnout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Columnout[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DataSel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20;
}

DISPLAY_LINE
{
	CHANNEL = "DataSel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "DataSel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "DataSel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "LEDEnable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Lineout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "Lineout[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Lineout[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Lineout[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Lineout[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Lineout[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Lineout[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Lineout[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "Lineout[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "luma";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35, 36, 37, 38, 39;
}

DISPLAY_LINE
{
	CHANNEL = "luma[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "luma[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "luma[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "luma[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "luma[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "luma[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "luma[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "luma[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "PWMclock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Rollclock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 42;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Switchclock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
